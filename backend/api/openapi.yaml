openapi: 3.1.3
info:
  title: HDP Authentication API
  description: Simple Spring Boot authentication API with PostgreSQL database for user registration and login
  version: 1.0.0
  contact:
    name: HDP Team
servers:
  - url: http://localhost:8080/api
    description: Local development server
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Creates a new user account with username and password
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              username: "testuser"
              password: "testpass123"
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                token: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlhdCI6MTY5ODc2NTQzMiwiZXhwIjoxNjk4ODUxODMyfQ.example"
        '400':
          description: Registration failed (username already exists or invalid input)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                token: "Registration failed: Username already exists"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticates user with username and password, returns JWT token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              username: "testuser"
              password: "testpass123"
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                token: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlhdCI6MTY5ODc2NTQzMiwiZXhwIjoxNjk4ODUxODMyfQ.example"
        '400':
          description: Login failed (invalid credentials)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                token: "Login failed: Invalid credentials"

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Unique username for the new account
          minLength: 3
          maxLength: 50
          example: "testuser"
        password:
          type: string
          description: Password for the new account
          minLength: 6
          maxLength: 100
          format: password
          example: "testpass123"

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username for login
          example: "testuser"
        password:
          type: string
          description: Password for login
          format: password
          example: "testpass123"

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT authentication token or error message
          example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlhdCI6MTY5ODc2NTQzMiwiZXhwIjoxNjk4ODUxODMyfQ.example"

tags:
  - name: Authentication
    description: User authentication operations
